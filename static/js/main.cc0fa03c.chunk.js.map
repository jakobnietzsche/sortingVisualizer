{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","sortingAlgorithms/sortingAlgorithmVisualizers.jsx","visualizers/SortingAlgorithmVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["_mergeSort","array","tempArray","first","end","animationArray","mid","Math","floor","i","beginHalf1","beginHalf2","current","animation","comparison","swap","push","remaining","merge","insertInOrder","anEntry","index","_quickSort","left","right","pivotIndex","pivot","partition","firstIndex","secondIndex","temp","mergeSort","sortingSpeed","arrayBars","document","getElementsByClassName","algorithms","length","setTimeout","valueOf","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","color","backgroundColor","sortingAlgorithmVisualizer","newHeight","height","insertionSort","firstCompared","secondCompared","j","currentButton","resetIsRunning","getElementById","disabled","SortingAlgorithmVisualizer","props","handleSortClick","value","lengthOfArray","min","indexOfMin","sortingVisualizers","state","sortingArray","leftSideCompare","rightSideCompare","pivotBar","currentCompare","undefined","handleStopClick","window","location","reload","handleSizeChange","evt","newLen","target","resetSortingArray","arrayLen","handleSpeedChange","handleGenerateNewArrayClick","arrayLength","start","random","this","setState","barWidth","innerWidth","id","map","className","width","React","Component","SortingAlgorithmButton","selected","handleClick","onClick","SortButton","GenerateNewArrayButton","SortingAlgorithmHeader","text","type","max","onChange","class","renderButton","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cc0fa03c.chunk.js","sourcesContent":["export function _mergeSort(array, tempArray, first, end, animationArray) {\r\n\tif (first < end) {\r\n\t\tvar mid = Math.floor((first+end) / 2);\r\n\t\t_mergeSort(array,tempArray, first, mid, animationArray);\r\n\t\t_mergeSort(array, tempArray, mid + 1, end, animationArray);\r\n\r\n\t\tmerge(array, tempArray, first, mid, end, animationArray);\r\n\t}\r\n}\r\n\r\nfunction merge(array, tempArray, first, mid, end, animationArray) {\r\n\tfor (let i = first; i <= end; i++) {\r\n\t\ttempArray[i] = array[i];\r\n\t}\r\n\r\n\tlet beginHalf1 = first,\r\n\tbeginHalf2 = mid + 1,\r\n\tcurrent = first;\r\n\r\n\twhile (beginHalf1 <= mid && beginHalf2 <= end) {\r\n\t\tconst animation = {};\r\n\t\tanimation.comparison = [beginHalf1, beginHalf2];\r\n\t\tif (tempArray[beginHalf1] <= tempArray[beginHalf2]) {\r\n\t\t\tanimation.swap = [current, tempArray[beginHalf1]];\r\n\t\t\tarray[current] = tempArray[beginHalf1];\r\n\t\t\tbeginHalf1++;\r\n\t\t} else {\r\n\t\t\tanimation.swap = [current, tempArray[beginHalf2]];\r\n\t\t\tarray[current] = tempArray[beginHalf2];\r\n\t\t\tbeginHalf2++;\r\n\t\t}\r\n\r\n\t\tanimationArray.push(animation.comparison);\r\n\t\tanimationArray.push(animation.comparison);\r\n\t\tanimationArray.push(animation.swap);\r\n\t\tcurrent++;\r\n\t}\r\n\r\n\tlet remaining = mid - beginHalf1;\r\n\tfor (let i = 0; i <= remaining; i++) {\r\n\t\tanimationArray.push([beginHalf1 + i, beginHalf1 + i]);\r\n\t\tanimationArray.push([beginHalf1 + i, beginHalf1 + i]);\r\n\t\tanimationArray.push([current + i, tempArray[beginHalf1 + i]]);\r\n\t\tarray[current + i] = tempArray[beginHalf1 + i];\r\n\t}\r\n}\r\n\r\nexport function _selectionSort(array, lengthOfArray, animationArray) {\r\n\tfor (let i = 0; i < lengthOfArray - 1; i++) {\r\n\t\tlet min = array[i];\r\n\t\tlet indexOfMin = i;\r\n\t\tfor (let index = i + 1; index <= lengthOfArray - 1; index++) {\r\n\t\t\tanimationArray.push([\"compare\", indexOfMin, index]);\r\n\t\t\tif (array[index] < min) {\r\n\t\t\t\tanimationArray.push([\"newSmallest\", indexOfMin, index]);\r\n\t\t\t\tmin = array[index];\r\n\t\t\t\tindexOfMin = index;\r\n\t\t\t}\r\n\t\t}\r\n\t\tanimationArray.push([\"swap\", i, indexOfMin]);\r\n\t\tlet temp = array[i];\r\n\t\tarray[i] = array[indexOfMin];\r\n\t\tarray[indexOfMin] = temp;\r\n\t}\r\n\tanimationArray.push([\"flashGreen\"]);\r\n\tanimationArray.push([\"returnTurquoise\"]);\r\n}\r\n\r\nexport function _insertionSort(array) {\r\n\tvar animationArray = [];\r\n\tfor (let i = 1; i < array.length; i++) {\r\n\t\tvar nextToInsert = array[i];\r\n\t\tinsertInOrder(nextToInsert, array, i - 1, animationArray);\r\n\t}\r\n\r\n\tanimationArray.push([\"flashGreen\"]);\r\n\tanimationArray.push([\"returnTurquoise\"]);\r\n\treturn animationArray;\r\n}\r\n\r\nfunction insertInOrder(anEntry, array, end, animationArray) {\r\n\tlet index = end;\r\n\twhile (index >= 0 && anEntry < array[index]) {\r\n\t\tanimationArray.push([\"compare\", index+1, index]);\r\n\t\tanimationArray.push([\"insert\", index+1, index]);\r\n\t\tarray[index+1] = array[index];\r\n\t\tindex--;\r\n\t}\r\n\tarray[index+1] = anEntry;\r\n}\r\n\r\nexport function _quickSort(array, left, right, animationArray) {\r\n\tlet index = partition(array, left, right, animationArray);\r\n\tif (left < index - 1) {\r\n\t\t_quickSort(array, left, index - 1, animationArray);\r\n\t}\r\n\tif (index < right) {\r\n\t\t_quickSort(array, index, right, animationArray);\r\n\t}\r\n}\r\n\r\nfunction partition(array, left, right, animationArray) {\r\n\tlet pivotIndex = Math.floor((left + right) / 2);\r\n\tlet pivot = array[pivotIndex];\r\n\tanimationArray.push([\"setPivot\", pivotIndex]);\r\n\r\n\twhile (left <= right) {\r\n\t\twhile (array[left] < pivot) {\r\n\t\t\tanimationArray.push([\"compare\", left]);\r\n\t\t\tleft++;\r\n\t\t}\r\n\t\tanimationArray.push([\"found\", left]);\r\n\t\twhile (array[right] > pivot) {\r\n\t\t\tanimationArray.push([\"compare\", right]);\r\n\t\t\tright--;\r\n\t\t}\r\n\t\tif (left <= right) {\r\n\t\t\tanimationArray.push([\"swap\", left, right]);\r\n\t\t\tswap(array, left, right);\r\n\t\t\tleft++;\r\n\t\t\tright--;\r\n\t\t}\r\n\t\tanimationArray.push([\"fin\"]);\r\n\t}\r\n\treturn left;\r\n}\r\n\r\nfunction swap(array, firstIndex, secondIndex) {\r\n\tlet temp = array[firstIndex];\r\n\tarray[firstIndex] = array[secondIndex];\r\n\tarray[secondIndex] = temp;\r\n}\r\n\r\n","import * as algorithms from './sortingAlgorithms.js';\r\nimport * as sortingAlgorithmVisualizer from '../visualizers/SortingAlgorithmVisualizer.jsx';\r\n\r\nexport function mergeSort(array, sortingSpeed) {\r\n\tconst tempArray = [];\r\n\tconst animationArray = [];\r\n\tconst arrayBars = document.getElementsByClassName(\"arrayElementBar\");\r\n\talgorithms._mergeSort(array, tempArray, 0, array.length - 1, animationArray);\r\n\tanimationArray.push([\"finishedSorting\"]);\r\n\r\n\tfor (let i = 0; i < animationArray.length; i++) {\r\n\t\tconst doesColorChange = i % 3 !== 2;\r\n\r\n\t\tif (doesColorChange) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (animationArray[i][0].valueOf() === \"finishedSorting\") {\r\n\t\t\t\t\tsortingAlgorithmVisualizer.resetIsRunning();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst [barOneIndex, barTwoIndex] = animationArray[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIndex].style;\r\n\t\t\t\tconst barTwoStyle = arrayBars[barTwoIndex].style;\r\n\t\t\t\tconst color = i % 3 === 0 ? 'red' : 'turquoise';\r\n\t\t\t\tbarOneStyle.backgroundColor = color;\r\n\t\t\t\tbarTwoStyle.backgroundColor = color;\r\n\t\t\t}, i * sortingSpeed);\r\n\t\t} else {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (animationArray[i][0].valueOf() === \"finishedSorting\") {\r\n\t\t\t\t\tsortingAlgorithmVisualizer.resetIsRunning();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst [barOneIndex, newHeight] = animationArray[i];\r\n\t\t\t\tconst barOneStyle = arrayBars[barOneIndex].style;\r\n\t\t\t\tbarOneStyle.height = `${newHeight}px`;\r\n\t\t\t}, i * sortingSpeed);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function selectionSort(array, sortingSpeed) {\r\n\tconst animationArray = [];\r\n\tconst arrayBars = document.getElementsByClassName(\"arrayElementBar\");\r\n\tvar firstCompared = arrayBars[0];\r\n\tvar secondCompared = arrayBars[1];\r\n\tfirstCompared.style.backgroundColor = 'red';\r\n\tsecondCompared.style.backgroundColor = 'red';\r\n\talgorithms._selectionSort(array, array.length, animationArray);\r\n\r\n\tfor (let i = 0; i < animationArray.length; i++) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (animationArray[i][0].valueOf() === \"compare\") {\r\n\t\t\t\tfirstCompared.style.backgroundColor = 'turquoise';\r\n\t\t\t\tsecondCompared.style.backgroundColor = 'turquoise';\r\n\t\t\t\tfirstCompared = arrayBars[animationArray[i][1]];\r\n\t\t\t\tsecondCompared = arrayBars[animationArray[i][2]];\r\n\t\t\t\tfirstCompared.style.backgroundColor = 'red';\r\n\t\t\t\tsecondCompared.style.backgroundColor = 'red';\r\n\t\t\t}\r\n\t\t\telse if (animationArray[i][0].valueOf() === \"newSmallest\") {\r\n\t\t\t\tfirstCompared.style.backgroundColor = 'turquoise';\r\n\t\t\t\tfirstCompared = arrayBars[animationArray[i][2]];\r\n\t\t\t\tfirstCompared.style.backgroundColor = 'red';\r\n\t\t\t}\r\n\t\t\telse if (animationArray[i][0].valueOf() === \"swap\") {\r\n\t\t\t\tlet barOneStyle = arrayBars[animationArray[i][1]].style;\r\n\t\t\t\tlet barTwoStyle = arrayBars[animationArray[i][2]].style;\r\n\r\n\t\t\t\tlet temp = barOneStyle.height;\r\n\t\t\t\tbarOneStyle.height = `${barTwoStyle.height}`;\r\n\t\t\t\tbarTwoStyle.height = `${temp}`\r\n\t\t\t}\r\n\t\t\telse if (animationArray[i][0].valueOf() === \"flashGreen\") {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfor (let j = 0; j < arrayBars.length; j++) {\r\n\t\t\t\t\t\tarrayBars[j].style.backgroundColor = 'SeaGreen';\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfor (let j = 0; j < arrayBars.length; j++) {\r\n\t\t\t\t\t\tarrayBars[j].style.backgroundColor = 'turquoise';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsortingAlgorithmVisualizer.resetIsRunning();\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}, i * sortingSpeed);\r\n\t}\r\n}\r\n\r\nexport function insertionSort(array, sortingSpeed) {\r\n\tvar animationArray = [];\r\n\tconst arrayBars = document.getElementsByClassName(\"arrayElementBar\");\r\n\tvar firstCompared = arrayBars[0];\r\n\tvar secondCompared = arrayBars[1];\r\n\tfirstCompared.style.backgroundColor = 'red';\r\n\tsecondCompared.style.backgroundColor = 'red';\r\n\tanimationArray = algorithms._insertionSort(array);\r\n\r\n\tfor (let i = 0; i < animationArray.length; i++) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (animationArray[i][0].valueOf() === \"compare\") {\r\n\t\t\t\tfirstCompared.style.backgroundColor = 'turquoise';\r\n\t\t\t\tsecondCompared.style.backgroundColor = 'turquoise';\r\n\t\t\t\tfirstCompared = arrayBars[animationArray[i][1]];\r\n\t\t\t\tsecondCompared = arrayBars[animationArray[i][2]];\r\n\t\t\t\tfirstCompared.style.backgroundColor = 'red';\r\n\t\t\t\tsecondCompared.style.backgroundColor = 'red';\r\n\t\t\t}\r\n\t\t\telse if (animationArray[i][0].valueOf() === \"insert\") {\r\n\t\t\t\tlet barOneStyle = arrayBars[animationArray[i][1]].style;\r\n\t\t\t\tlet barTwoStyle = arrayBars[animationArray[i][2]].style;\r\n\r\n\t\t\t\tlet temp = barOneStyle.height;\r\n\t\t\t\tbarOneStyle.height = `${barTwoStyle.height}`;\r\n\t\t\t\tbarTwoStyle.height = `${temp}`\r\n\t\t\t}\r\n\t\t\telse if (animationArray[i][0].valueOf() === \"flashGreen\") {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfor (let j = 0; j < arrayBars.length; j++) {\r\n\t\t\t\t\t\tarrayBars[j].style.backgroundColor = 'SeaGreen';\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfor (let j = 0; j < arrayBars.length; j++) {\r\n\t\t\t\t\t\tarrayBars[j].style.backgroundColor = 'turquoise';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsortingAlgorithmVisualizer.resetIsRunning();\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}, i * sortingSpeed);\r\n\t}\r\n}\r\n\r\nexport function quickSort(array, sortingSpeed) {\r\n\tvar animationArray = [];\r\n\tconst arrayBars = document.getElementsByClassName(\"arrayElementBar\");\r\n\tvar leftSideCompare, rightSideCompare;\r\n\tvar pivotBar;\r\n\tvar currentCompare = arrayBars[0];\r\n\talgorithms._quickSort(array, 0, array.length - 1, animationArray);\r\n\tanimationArray.push([\"flashGreen\"]);\r\n\tanimationArray.push([\"returnTurquoise\"]);\r\n\r\n\tfor (let i = 0; i < animationArray.length; i++) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tcurrentCompare.style.backgroundColor = 'turquoise';\r\n\t\t\tif (animationArray[i][0].valueOf() === \"compare\") {\r\n\t\t\t\tcurrentCompare = arrayBars[animationArray[i][1]];\r\n\t\t\t\tcurrentCompare.style.backgroundColor = 'red';\r\n\t\t\t}\r\n\t\t\telse if (animationArray[i][0].valueOf() === \"found\") {\r\n\t\t\t\tleftSideCompare = arrayBars[animationArray[i][1]];\r\n\t\t\t\tleftSideCompare.style.backgroundColor = 'red';\r\n\t\t\t}\r\n\t\t\telse if (animationArray[i][0].valueOf() === \"swap\") {\r\n\t\t\t\trightSideCompare = arrayBars[animationArray[i][2]];\r\n\t\t\t\tleftSideCompare.style.backgroundColor = 'blue';\r\n\t\t\t\trightSideCompare.style.backgroundColor = 'blue';\r\n\t\t\t\tlet temp = leftSideCompare.style.height\r\n\t\t\t\tleftSideCompare.style.height = `${rightSideCompare.style.height}`;\r\n\t\t\t\trightSideCompare.style.height = `${temp}`;\r\n\t\t\t\tif (leftSideCompare === pivotBar) {pivotBar = rightSideCompare;}\r\n\t\t\t\telse if (rightSideCompare === pivotBar) {pivotBar = leftSideCompare;}\r\n\t\t\t} \r\n\t\t\telse if (animationArray[i][0].valueOf() === \"setPivot\") {\r\n\t\t\t\tif (pivotBar !== undefined) {\r\n\t\t\t\t\tpivotBar.style.backgroundColor = 'turquoise';\r\n\t\t\t\t}\r\n\t\t\t\tpivotBar = arrayBars[animationArray[i][1]];\r\n\t\t\t\tpivotBar.style.backgroundColor = 'green';\r\n\t\t\t} \r\n\t\t\telse if (animationArray[i][0].valueOf() === \"fin\") {\r\n\t\t\t\tleftSideCompare.style.backgroundColor = 'turquoise';\r\n\t\t\t\trightSideCompare.style.backgroundColor = 'turquoise';\r\n\r\n\t\t\t}\r\n\t\t\telse if (animationArray[i][0].valueOf() === \"flashGreen\") {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfor (let j = 0; j < arrayBars.length; j++) {\r\n\t\t\t\t\t\tarrayBars[j].style.backgroundColor = 'SeaGreen';\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfor (let j = 0; j < arrayBars.length; j++) {\r\n\t\t\t\t\t\tarrayBars[j].style.backgroundColor = 'turquoise';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsortingAlgorithmVisualizer.resetIsRunning();\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t\tpivotBar.style.backgroundColor = 'green';\r\n\t\t}, i * sortingSpeed);\r\n\t}\r\n}","import React from 'react';\r\nimport '../styles/Main.css';\r\nimport '../styles/Toolbar.css';\r\nimport * as sortingVisualizers from '../sortingAlgorithms/sortingAlgorithmVisualizers.jsx';\r\n\r\nvar currentButton = null;\r\n\r\nexport function resetIsRunning() {\r\n\tdocument.getElementById(\"changeSize\").disabled = null;\r\n\tdocument.getElementById(\"changeSpeed\").disabled = null;\r\n}\r\n\r\nexport default class SortingAlgorithmVisualizer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tsortingArray: [],\r\n\t\t\tsortingSpeed: 50,\r\n\t\t\tarrayLen: 50,\r\n\t\t};\r\n\t}\r\n\r\n\tresetSortingArray(arrayLength) {\r\n\t\tconst sortingArray = [];\r\n\t\tfor (let i = 0; i < arrayLength; i++) {\r\n\t\t\tsortingArray.push(randomInteger(5, 501));\r\n\t\t}\r\n\r\n\t\tthis.setState({sortingArray});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.getElementById(\"changeSize\").value = 50;\r\n\t\tdocument.getElementById(\"changeSpeed\").value = 50;\r\n\t\tthis.resetSortingArray(50);\r\n\t}\r\n\r\n\thandleSortClick = () => {\r\n\t\tdocument.getElementById(\"changeSize\").disabled = \"disabled\";\r\n\t\tdocument.getElementById(\"changeSpeed\").disabled = \"disabled\";\r\n\t\tif(currentButton != null) {\r\n\t\t\tswitch(currentButton.props.value) {\r\n\t\t\t\tcase(\"Selection Sort\"):\r\n\t\t\t\t\tsortingVisualizers.selectionSort(this.state.sortingArray, 100 - this.state.sortingSpeed);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase(\"Insertion Sort\"):\r\n\t\t\t\t\tsortingVisualizers.insertionSort(this.state.sortingArray, 100 - this.state.sortingSpeed);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase(\"Merge Sort\"):\r\n\t\t\t\t\tsortingVisualizers.mergeSort(this.state.sortingArray, 100 - this.state.sortingSpeed);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase(\"Quicksort\"):\r\n\t\t\t\t\tsortingVisualizers.quickSort(this.state.sortingArray, 100 - this.state.sortingSpeed);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thandleStopClick = () => {\r\n\t\twindow.location.reload();\r\n\t}\r\n\thandleSizeChange = (evt) => {\r\n\t\tlet newLen = evt.target.value;\r\n\t\tthis.resetSortingArray(newLen);\r\n\t\tthis.state.arrayLen = newLen;\r\n\t}\r\n\thandleSpeedChange = (evt) => {\r\n\t\tthis.state.sortingSpeed = evt.target.value;\r\n\t}\r\n\thandleGenerateNewArrayClick = () => {\r\n\t\tthis.resetSortingArray(this.state.arrayLen);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {sortingArray} = this.state;\r\n\t\tconst barWidth = Math.floor(window.innerWidth / (sortingArray.length * 3));\r\n\r\n\t\treturn (\r\n\t\t\t<body>\r\n\t\t\t\t<SortingAlgorithmHeader \r\n\t\t\t\t\thandleStopClick={this.handleStopClick}\r\n\t\t\t\t\thandleSizeChange={this.handleSizeChange}\r\n\t\t\t\t\thandleSpeedChange={this.handleSpeedChange}\r\n\t\t\t\t\tsortingArray={this.state.sortingArray}\r\n\t\t\t\t\thandleSortClick={this.handleSortClick}\r\n\t\t\t\t\thandleGenerateNewArrayClick={this.handleGenerateNewArrayClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div id=\"arrayElementContainer\">\r\n\t\t\t\t\t{sortingArray.map((value, index) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName=\"arrayElementBar\" \r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tstyle={{height: value, width: barWidth}}>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</body>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass SortingAlgorithmButton extends React.Component {\r\n\tstate = {selected: false}\r\n\r\n\thandleClick = () => {\r\n\t\tif (currentButton != null) {\r\n\t\t\tcurrentButton.setState({selected: false})\r\n\t\t}\r\n\r\n\t\tcurrentButton = this;\r\n\t\tthis.setState({\r\n\t\t\tselected: !this.state.selected\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button \r\n\t\t\tclassName={this.state.selected ? \"currentSortingAlgorithmButton\" : \"sortingAlgorithmButton\"}\r\n\t\t\tonClick={() => this.handleClick()}>\r\n\t\t\t{this.props.value}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass SortButton extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button \r\n\t\t\tclassName=\"sortButton\"\r\n\t\t\tonClick={this.props.handleSortClick}>\r\n\t\t\tClick to sort\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass GenerateNewArrayButton extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\tid=\"generateNewArrayButton\"\r\n\t\t\tonClick={this.props.handleGenerateNewArrayClick}>\r\n\t\t\tGenerate New Array\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass SortingAlgorithmHeader extends React.Component {\r\n\trenderButton(text) {\r\n\t\treturn (\r\n\t\t\t<SortingAlgorithmButton\r\n\t\t\t\tvalue={text}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"sortingAlgorithmHeader\">\r\n\t\t\t\t<div className=\"sortingButtonContainer\">\r\n\t\t\t\t\t<span id=\"arraySize\">Change Array Size</span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t id=\"changeSize\"\r\n\t\t\t\t\t type=\"range\"\r\n\t\t\t\t\t min=\"4\"\r\n\t\t\t\t\t max=\"100\"\r\n\t\t\t\t\t onChange={this.props.handleSizeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span id=\"sortingSpeed\">Change Sorting Speed</span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t id=\"changeSpeed\"\r\n\t\t\t\t\t type=\"range\"\r\n\t\t\t\t\t min=\"0\"\r\n\t\t\t\t\t max=\"99\"\r\n\t\t\t\t\t onChange={this.props.handleSpeedChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span class=\"separator\"></span>\r\n\t\t\t\t\t<span id=\"generateNewArrayButtonContainer\">\r\n\t\t\t\t\t\t<GenerateNewArrayButton\r\n\t\t\t\t\t\t\thandleGenerateNewArrayClick={this.props.handleGenerateNewArrayClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class=\"separator\"></span>\r\n\t\t\t\t\t{this.renderButton(\"Selection Sort\")} \r\n\t\t\t\t\t{this.renderButton(\"Insertion Sort\")}\r\n\t\t\t\t\t{this.renderButton(\"Merge Sort\")}\r\n\t\t\t\t\t{this.renderButton(\"Quicksort\")}\r\n\t\t\t\t\t<span class=\"separator\"></span>\r\n\t\t\t\t\t<SortButton\r\n\t\t\t\t\t\thandleSortClick={this.props.handleSortClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid=\"stopButton\"\r\n\t\t\t\t\t\tonClick={this.props.handleStopClick}>\r\n\t\t\t\t\t\tStop sorting\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n// randomInteger function retrieved from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\r\nfunction randomInteger(start, end) {\r\n\treturn Math.floor(Math.random() * (end - start) + start);\r\n}","import React from 'react';\r\nimport SortingAlgorithmVisualizer from './visualizers/SortingAlgorithmVisualizer';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingAlgorithmVisualizer></SortingAlgorithmVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}